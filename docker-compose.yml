# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

version: '3'

services:
  zookeeper:
    image: zookeeper:latest
    container_name: zookeeper
    expose:
      - 2181
    networks:
      - mytest
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    healthcheck:
      test: ["CMD", "sh", "-c", "nc -nz 127.0.0.1 2181"]
      interval: 5s
      timeout: 60s
      retries: 120

  kafka:
    image: bitnami/kafka:latest
    container_name: kafka
    expose:
      - 9092
    ports:
      - '9092:9092'
    networks:
      - mytest
    environment:
      - KAFKA_ENABLE_KRAFT=no
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://10.0.0.120:9092
      - ALLOW_PLAINTEXT_LISTENER=yes
    depends_on:
      zookeeper:
        condition: service_healthy
    # healthcheck:
    #   test: ["CMD", "kafka-topics.sh", "--list", "--zookeeper", "zookeeper:2181"]
    #   interval: 5s
    #   timeout: 60s
    #   retries: 120

  otel:
    image: otel/opentelemetry-collector:0.50.0
    container_name: otel
    command: --config=/etc/otel-collector-config.yaml
    volumes:
      - ./otel-collector-config.yaml:/etc/otel-collector-config.yaml
    ports:
      - '8888:8888'
    networks:
      - mytest
    depends_on:
      - kafka
      # kafka:
      #   condition: service_healthy

  kafka-exporter:
    image: danielqsj/kafka-exporter
    container_name: kafka-exporter
    command: --kafka.server=kafka:9092
    ports:
      - '9308:9308'
    networks:
      - mytest
    depends_on:
      - kafka
    # depends_on:
    #   kafka:
    #     condition: service_healthy

networks:
  mytest:

